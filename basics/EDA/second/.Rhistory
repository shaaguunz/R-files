getwd()
library(swirl)
swirl)
swirl()
head(mpg)
head(mpg)
head(mpg)
head(mpg)
head(mpg)
library(datasets)
head(mpg)
head(airquality)
range(airquality$Ozone,na.rim=TRUE)
range(airquality$Ozone,na.rm=TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month,data=airquality)
boxplot(Ozone~Month,data=airquality,xlab="Month",ylab = "Ozone(ppb")
boxplot(Ozone~Month,data=airquality,xlab="Month",ylab = "Ozone(ppb)",col.axis="blue",col.lab="red")
boxplot(Ozone~Month,airquality,xlab="Month",ylab = "Ozone(ppb)",col.axis="blue",col.lab="red")
boxplot(Ozone~Month,airquality,xlab="Month",ylab = "Ozone (ppb)",col.axis="blue",col.lab="red")
main="Ozone and Wind in New York City"
library(datasets)
title(main="Ozone and Wind in New York \")
title(main="Ozone and Wind in New York City")
title(main="Ozone and Wind in New York City")
with(airquality,plot(Wind,Ozone))
title(main="Ozone and Wind in New York \")
""
"
title(main="Ozone and Wind in New YorkCity")
title(main="Ozone and Wind in New York City")
length(paer())
length(par())
names(paR())
names(par())
paer()$pin
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind,airquality$Ozone,set="n")
plot(airquality$Wind,type="n",airquality$Ozone)
title(main="Wind and ozone in NYC")
title(main="Wind and Ozone in NYC")
may<-subset(airquality)
may<-subset(airquality,Month==5)
points(may,type=2)
points(may,type=2)
points(may)
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay<-subset(airquality,Month!=5)
points(notmay$Wind, notmay$Ozone,col="red")
points(notmay$Wind, notmay$Ozone,col="red",pch=8)
legend("topright",c(17,8),c("blue","red"),c("May","Other MOnths"))
legend("topright",c(17,8),c("blue","red"),c("May","Other Months"))
legend(topright,c(17,8),c("blue","red"),c("May","Other Months"))
legend("topright",c(17,8),c("blue","red"),c("May","Other Months"))
legend("topright",c(17,8),c("blue","red"),c("red","Other Months"))
legend("topright",c(17,8),c("blue","red"),c("red","red"))
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline(lty=2)
abline(v=median(airquality$Wind),ty=2)
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Ozone,air)
plot(airquality$Ozone,airquality$Solar.R,main = "Ozone and Solar Raditation")
plot(airquality$Ozone,airquality$Solar.R,main = "Ozone and Solar Raditation").
plot(airquality$Ozone,airquality$Solar.R,main = "Ozone and Solar Radiation")
par(mfrow=c(1,3),max=c(4,4,2,1),oma=c(0,0,2,0))
par(mfrow=c(1,3),mar=c(4,4,2,1),oma=c(0,0,2,0))
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R,main = "Ozone and Solar Radiation")
plot(airquality$Solar.R,airquality$Ozone,main = "Ozone and Solar Radiation")
plot(airquality$Temp,airquality$Ozone,main="Ozone and Temperature")
mtext("Ozone and Weather in New York City")
mtext("Ozone and Weather in New York City",outer=TRUE)
librayr
library(swirl)
swirl()
str(mpg)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg,color='drv')
qplot(displ,hwy,data=mpg,color=drv)
qplot(displ,hwy,data=mpg,color=drv,geom=c("point","smoth"))
qplot(displ,hwy,data=mpg,color=drv,geom=c("point","smooth"))
qplot(y=hwy,data=mpg,color=drv)
myhigh
qplot(drv,hwy,data=mpg,geom="boxplot")
qplot(drv,hwy,data=mpg,geom="boxplot",color="manudacturer")
qplot(drv,hwy,data=mpg,geom="boxplot",color=manufacturer)
qplot(hwy,data=mpg,fill=dev)
qplot(hwy,data=mpg,fill=drv)
qplot(displ,hwy,data=mpg,facets=.~drv)
qplot(hwy,data=mpg,facets = drv~. .)
qplot(hwy,data=mpg,facets = drv~.)
qplot(hwy,data=mpg,facets = drv~.,binwidth=2)
qplot(displ,hwy,data=mpg,geom=c("point","smooth",facets = .~drv)
)
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets = .~drv)
g<-ggplot(mpg,c(displ,hwy))
g<-ggplot(mpg,displ,hwy)
g<-ggplot(mpg,aes=c(displ,hwy))
g<-ggplot(mpg,aes(displ,hwy)
)
g
summary(gh)
summary(g)
g
g+geom_poimt()
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth("lm")
g+geom_point()+geom_smooth("lm")
(g+geom_point())+geom_smooth("lm")
(g+geom_point())+geom_smooth(lm)
(g+geom_point())+geom_smooth("lm")
(g+geom_point())+geom_smooth()
(g+geom_point())+geom_smooth(method = "lm")
g+geom_point()+geom_smooth(method = "lm")
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv) +ggtitle("Swirl Rules!")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
g+geom_point(color="pink",size=4,alpha=1/2)
g+geom_point(color="drv",size=4,alpha=1/2)
g+geom_point(color=drv,size=4,alpha=1/2)
g+geom_point(size=4,alpha=1/2)
g+geom_point(aes(color=drv),size=4,alpha=1/2)
g+geom_point(aes(color=drv),size=4,alpha=1/2)
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement",y="Hwy Mileage")
g+geom_point(aes(color=drv),size=2,alpha=1/2)+geom_smoooth(size=4,linetype=3,method="lm",se=FALSE)
g+geom_point(aes(color=drv),size=2,alpha=1/2)+geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
library(swirl)
swirl()
g+geom_point(color=drv)+theme_bw(base_family = "Times New Roman")
g+geom_point(color="drv")+theme_bw(base_family = "Times New Roman")
g+geom_point(color((drv)+theme_bw(base_family = "Times New Roman")
)
)
g+geom_point(color((drv))+theme_bw(base_family = "Times New Roman")
)
g+geom_point(color(drv)+theme_bw(base_family = "Times New Roman")
)
g+geom_point(color=red+theme_bw(base_family = "Times New Roman")
)
g+geom_point(color="red"+theme_bw(base_family = "Times New Roman")
)
g+geom_point(color="red")+theme_bw(base_family = "Times New Roman")
g+geom_point(aes(color=drv)+theme_bw(base_family = "Times")
)
g+geom_point(aes(color=drv))+theme_bw(base_family = "Times")
plot(myx,mxy,typ="1",ylim=c(-3,3))
plot(myx,myy,typ="1",ylim=c(-3,3))
plot(myx,myy,type = ="1",ylim=c(-3,3))
plot(myx,myy,type = "1",ylim=c(-3,3))
plot(myx,myy,type = '1',ylim=c(-3,3))
plot(myx,myy,type = '0',ylim=c(-3,3))
plot(x=myx,y=myy,type = '0',ylim=c(-3,3))
plot(x=myx,y=myy,ylim=c(-3,3))
plot(x=myx,y=myy,type = "1",ylim=c(-3,3))
plot(myx, myy, type = "l", ylim = c(-3,3))
g<ggplot(testdat,aes(x=myx,y=myy))
g<ggplot(data=testdat,aes(x=myx,y=myy))
g<-ggplot(data=testdat,aes(x=myx,y=myy))
g+geom_line()
g+geom_line(ylim=c(-3,3))
g+geom_line()+ylim=c(-3,3)
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartes(ylim(-3,3))
g+geom_line()+coord_cartesian(ylim(-3,3))
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g<-ggplot(data=mpg,aes(x=displ,y=hwy,colr=factor(year)))
g<-ggplot(mpg,aes(x=displ,y=hwy,colr=factor(year)))
g<-ggplot(mpg,aes(x=displ,y=hwy,color=factor(year)))
g+geom_point()
g+geom_point() +facet_grid(drv~cyl,margins=TRUE)
g+geom_point() +facet_grid(drv~cyl,margins=TRUE)+geom_smooth
g+geom_point() +facet_grid(drv~cyl,margins=TRUE)+geom_smooth(methos="lm",se=FALSE,size=2,color="black")
g+geom_point() +facet_grid(drv~cyl,margins=TRUE)+geom_smooth(methos="lm",size=2,se=FALSE,color="black")
g+geom_point() +facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method = "lm",size=2,se=FALSE,color="black")
g+geom_point() +facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method = "lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
str(diamonds)
qplot(price,data=diamonds)
range(diamonds$price)
qplot(price,data=diamonds,binwidth=18497/30)
brik
brk
counts
qplot(price,data=diamonds,binwidth=18497/30,fill=cut)
qplot(price,data=diamonds,geom="density")
qplot(price,data=diamonds,geom="density",color="cut")
qplot(price,data=diamonds,geom="density",color=cut)
qplot(carat,price,data=diamonds)
qplot(carat,price,data=diamonds,shape=cut)
qplot(carat,price,data=diamonds,colr=cut)
qplot(carat,price,data=diamonds,color=cut)
qplot(carat,price,data=diamonds,color=cut,geom_smooth("lm"))
qplot(carat,price,data=diamonds,color=cut,geom_smooth(set="lm"))
qplot(carat,price,data=diamonds,color=cut)
qplot(carat,price,data=diamonds,color=cut)+geom_smooth(set="cut")
qplot(carat,price,data=diamonds,color=cut)+geom_smooth(set="lm")
qplot(carat,price,data=diamonds,color=cut)+geom_smooth(method = "lm")
qplot(carat,price,data=diamonds,color=cut,facets = .~cut)+geom_smooth(method = "lm")
g<-ggplot(ddata = diamonds,aes(depth,price))
g<-ggplot(data = diamonds,aes(depth,price))
summary(g)
g+geom_point(alpha=1/3)
cutpoints<-quantile(data=diamonds$carat,seq(0,1,lebgth=4),na.rm=TRUE)
cutpoints<-quantile(diamonds$carat,seq(0,1,lebgth=4),na.rm=TRUE)
cutpoints<-quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints
diamonds$car2<-cut(diamonds$carat,cutpoints)
g<-ggplot(diamonds,aes(depth,price))
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamondsp[myd,]
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(set="lm",size=3,color="pink")
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method ="lm",size=3,color="pink")
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
dist(dataFrame)
hclust(dataFrame)
hclust(distxy)
hc<-hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5,col="blue")
abline(h=0.4,col="red")
4
3
2
1
4
5
6
abline(h=0.5)
6
6
6
6
6
7
8
9
10
5
4
3
2
1
1
2
3
4
5
6
8
9
7
8
9
1.
10
11
12
13
dist(dFsm)
hc
heatmap(dataMatrix,col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmar
cmat
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2
))
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2))
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2))
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
which.min(distTmp,2,which.min)
which.min(distTmp,2,which.min())
which.min(distTmp,2,wh
)
which.min(distTmp)
apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(x,y,finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame,centers=3)
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
0
getwd()
dir()
setwd(./"EDA")
setwd("./EDA")
dir()
setwd("./second")
dir()
source('D:/academics/codes/self/R/basics/EDA/second/plot1.R', echo=TRUE)
head(NEI)
SCC
names(SCC)
?aggregate
source('D:/academics/codes/self/R/basics/EDA/second/plot1.R', echo=TRUE)
source('D:/academics/codes/self/R/basics/EDA/second/plot1.R', echo=TRUE)
?plot
with(sumdat,plot(year,Emissions,xlab="Year",ylab="Total Emissions",type="1",main="Total Emissions"))
with(sumdat,plot(year,Emissions,xlab="Year",ylab="Total Emissions",main="Total Emissions"))
with(sumdat,plot(year,Emissions,xlab="Year",ylab="Total Emissions",main="Total Emissions"))
with(sumdat,plot(year,Emissions,typer='1',xlab="Year",ylab="Total Emissions",type="1",main="Total Emissions"))
with(sumdat,plot(year,Emissions,type='1',xlab="Year",ylab="Total Emissions",type="1",main="Total Emissions"))
with(sumdat,plot(year,Emissions,type='1',xlab="Year",ylab="Total Emissions",main="Total Emissions"))
with(sumdat, plot(year, Emissions,
, xlab = "Year", ylab = "Total Emissions", type="l"
, main="Total Emissions for each year")
)
with(sumdat, plot(year, Emissions,
, xlab = "Year", ylab = "Total Emissions", type="l"
, main="Total Emissions for each year"))
source('D:/academics/codes/self/R/basics/EDA/second/plot1.R', echo=TRUE)
source('D:/academics/codes/self/R/basics/EDA/second/plot1.R', echo=TRUE)
source('D:/academics/codes/self/R/basics/EDA/second/plot1.R', echo=TRUE)
source('D:/academics/codes/self/R/basics/EDA/second/plot1.R', echo=TRUE)
close(SEC)
close(SCC)
source('D:/academics/codes/self/R/basics/EDA/second/plot2.R', echo=TRUE)
maryland<-NEI[NEI$fips=="24510",]
sum<-aggregate(Emissions~year,maryland,sum)
png(filename = "plot2.png", width = 600, height = 600, units = "px", bg = "white")
with(sum,plot(year,Emissions, xlab = "year",ylab = "Total Emissions",main="Total Emissions by year",
type="1"))
dev.off()
maryland<-NEI[NEI$fips=="24510",]
sum<-aggregate(Emissions~year,maryland,sum)
png(filename = "plot2.png", width = 600, height = 600, units = "px", bg = "white")
with(sum, plot(year, Emissions,
, xlab = "Year", ylab = "Total Emissions", type="l"
, main="Total Emissions for each year"))
dev.off()
sum<-aggregate(Emissions~year+type,maryland,sum)
png(filename = "plot3.png", width = 600, height = 600, units = "px", bg = "white")
g<-ggplot(sum,aes(year,Emissions))
g+facet_grid(.~type)+geom_line()
dev.off()
png(filename = "plot3.png", width = 600, height = 600, units = "px", bg = "white")
g<-ggplot(sum,aes(year,Emissions))
g+facet_grid(. ~ type)+geom_line()
dev.off()
png(filename = "plot3.png", width = 600, height = 600, units = "px", bg = "white")
g<-ggplot(sum,aes(year,Emissions))
g+facet_grid(. ~ type)+geom_line()
dev.off()
png(filename = "plot3.png", width = 600, height = 600, units = "px", bg = "white")
g<-ggplot(sum,aes(year,Emissions))
g+facet_grid(. ~ type)+geom_line()
dev.off()
png(filename = "plot3.png", width = 600, height = 600, units = "px", bg = "white")
g <- ggplot(sum, aes(year, Emissions))
g + facet_grid(. ~ type) + geom_line()
dev.off()
png(filename = "plot3.png", width = 600, height = 600, units = "px", bg = "white")
g <- ggplot(sum, aes(factor(year), Emissions,fill=type))+
facet_grid(. ~ type) + geom_line()
dev.off()
png(filename = "plot3.png", width = 600, height = 600, units = "px", bg = "white")
g <- ggplot(sum, aes(factor(year), Emissions,fill=type))+
facet_grid(. ~ type) + geom_line()
dev.off()
source('D:/academics/codes/self/R/basics/EDA/second/plot3.R', echo=TRUE)
source('D:/academics/codes/self/R/basics/EDA/second/plot3.R', echo=TRUE)
sum<-aggregate(Emissions~year+type,maryland,sum)
summ<-aggregate(Emissions~year+type,maryland,sum)
typeMaryland <- aggregate(Emissions~year + type, Maryland, sum)
typeMaryland <- aggregate(Emissions~year + type, maryland, sum)
