getwd()
library(swirl)
swirl)
swirl()
head(mpg)
head(mpg)
head(mpg)
head(mpg)
head(mpg)
library(datasets)
head(mpg)
head(airquality)
range(airquality$Ozone,na.rim=TRUE)
range(airquality$Ozone,na.rm=TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month,data=airquality)
boxplot(Ozone~Month,data=airquality,xlab="Month",ylab = "Ozone(ppb")
boxplot(Ozone~Month,data=airquality,xlab="Month",ylab = "Ozone(ppb)",col.axis="blue",col.lab="red")
boxplot(Ozone~Month,airquality,xlab="Month",ylab = "Ozone(ppb)",col.axis="blue",col.lab="red")
boxplot(Ozone~Month,airquality,xlab="Month",ylab = "Ozone (ppb)",col.axis="blue",col.lab="red")
main="Ozone and Wind in New York City"
library(datasets)
title(main="Ozone and Wind in New York \")
title(main="Ozone and Wind in New York City")
title(main="Ozone and Wind in New York City")
with(airquality,plot(Wind,Ozone))
title(main="Ozone and Wind in New York \")
""
"
title(main="Ozone and Wind in New YorkCity")
title(main="Ozone and Wind in New York City")
length(paer())
length(par())
names(paR())
names(par())
paer()$pin
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind,airquality$Ozone,set="n")
plot(airquality$Wind,type="n",airquality$Ozone)
title(main="Wind and ozone in NYC")
title(main="Wind and Ozone in NYC")
may<-subset(airquality)
may<-subset(airquality,Month==5)
points(may,type=2)
points(may,type=2)
points(may)
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay<-subset(airquality,Month!=5)
points(notmay$Wind, notmay$Ozone,col="red")
points(notmay$Wind, notmay$Ozone,col="red",pch=8)
legend("topright",c(17,8),c("blue","red"),c("May","Other MOnths"))
legend("topright",c(17,8),c("blue","red"),c("May","Other Months"))
legend(topright,c(17,8),c("blue","red"),c("May","Other Months"))
legend("topright",c(17,8),c("blue","red"),c("May","Other Months"))
legend("topright",c(17,8),c("blue","red"),c("red","Other Months"))
legend("topright",c(17,8),c("blue","red"),c("red","red"))
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline(lty=2)
abline(v=median(airquality$Wind),ty=2)
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Ozone,air)
plot(airquality$Ozone,airquality$Solar.R,main = "Ozone and Solar Raditation")
plot(airquality$Ozone,airquality$Solar.R,main = "Ozone and Solar Raditation").
plot(airquality$Ozone,airquality$Solar.R,main = "Ozone and Solar Radiation")
par(mfrow=c(1,3),max=c(4,4,2,1),oma=c(0,0,2,0))
par(mfrow=c(1,3),mar=c(4,4,2,1),oma=c(0,0,2,0))
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R,main = "Ozone and Solar Radiation")
plot(airquality$Solar.R,airquality$Ozone,main = "Ozone and Solar Radiation")
plot(airquality$Temp,airquality$Ozone,main="Ozone and Temperature")
mtext("Ozone and Weather in New York City")
mtext("Ozone and Weather in New York City",outer=TRUE)
librayr
library(swirl)
swirl()
str(mpg)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg,color='drv')
qplot(displ,hwy,data=mpg,color=drv)
qplot(displ,hwy,data=mpg,color=drv,geom=c("point","smoth"))
qplot(displ,hwy,data=mpg,color=drv,geom=c("point","smooth"))
qplot(y=hwy,data=mpg,color=drv)
myhigh
qplot(drv,hwy,data=mpg,geom="boxplot")
qplot(drv,hwy,data=mpg,geom="boxplot",color="manudacturer")
qplot(drv,hwy,data=mpg,geom="boxplot",color=manufacturer)
qplot(hwy,data=mpg,fill=dev)
qplot(hwy,data=mpg,fill=drv)
qplot(displ,hwy,data=mpg,facets=.~drv)
qplot(hwy,data=mpg,facets = drv~. .)
qplot(hwy,data=mpg,facets = drv~.)
qplot(hwy,data=mpg,facets = drv~.,binwidth=2)
qplot(displ,hwy,data=mpg,geom=c("point","smooth",facets = .~drv)
)
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets = .~drv)
g<-ggplot(mpg,c(displ,hwy))
g<-ggplot(mpg,displ,hwy)
g<-ggplot(mpg,aes=c(displ,hwy))
g<-ggplot(mpg,aes(displ,hwy)
)
g
summary(gh)
summary(g)
g
g+geom_poimt()
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth("lm")
g+geom_point()+geom_smooth("lm")
(g+geom_point())+geom_smooth("lm")
(g+geom_point())+geom_smooth(lm)
(g+geom_point())+geom_smooth("lm")
(g+geom_point())+geom_smooth()
(g+geom_point())+geom_smooth(method = "lm")
g+geom_point()+geom_smooth(method = "lm")
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv) +ggtitle("Swirl Rules!")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
g+geom_point(color="pink",size=4,alpha=1/2)
g+geom_point(color="drv",size=4,alpha=1/2)
g+geom_point(color=drv,size=4,alpha=1/2)
g+geom_point(size=4,alpha=1/2)
g+geom_point(aes(color=drv),size=4,alpha=1/2)
g+geom_point(aes(color=drv),size=4,alpha=1/2)
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement",y="Hwy Mileage")
g+geom_point(aes(color=drv),size=2,alpha=1/2)+geom_smoooth(size=4,linetype=3,method="lm",se=FALSE)
g+geom_point(aes(color=drv),size=2,alpha=1/2)+geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
install.packages(c("pillar", "pkgbuild", "ps", "rlang", "tidyr"))
install.packages(c("boot", "class", "foreign", "KernSmooth", "MASS", "nnet", "spatial"), lib="C:/Program Files/R/R-4.0.0/library")
getwd()
setwd("./Reproducible")
setwd("./Reproducible")
dir()
setwd("./Reproducble")
dir()
install.packages("timeDate")
